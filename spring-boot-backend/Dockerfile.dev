# 开发环境Dockerfile
FROM eclipse-temurin:17-jdk-alpine

# 设置构建参数
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=1.0.0-dev

# 设置标签
LABEL maintainer="certification-monitor-team" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="certification-monitor-backend-dev" \
      org.label-schema.description="认证监控预警系统后端服务(开发环境)" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.schema-version="1.0"

# 安装必要工具
RUN apk add --no-cache \
    curl \
    tzdata \
    git \
    && rm -rf /var/cache/apk/*

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 设置工作目录
WORKDIR /app

# 复制Maven wrapper和配置
COPY .mvn/ .mvn/
COPY mvnw pom.xml ./

# 下载依赖
RUN chmod +x mvnw && \
    ./mvnw dependency:go-offline -B && \
    ./mvnw dependency:resolve-sources -B

# 创建日志目录
RUN mkdir -p /app/logs

# 暴露端口
EXPOSE 8080 35729 5005

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# 开发模式启动命令（支持热重载和调试）
CMD ["./mvnw", "spring-boot:run", \
     "-Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true -Dspring.devtools.livereload.enabled=true -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'", \
     "-Dspring-boot.run.profiles=dev"]